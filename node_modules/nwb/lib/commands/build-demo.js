'use strict';

exports.__esModule = true;
exports.default = buildDemo;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _webpackBuild = require('../webpackBuild');

var _webpackBuild2 = _interopRequireDefault(_webpackBuild);

var _webpackUtils = require('../webpackUtils');

var _cleanDemo = require('./clean-demo');

var _cleanDemo2 = _interopRequireDefault(_cleanDemo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Build a module's demo app from demo/src/index.js.
 */
function buildDemo(args, cb) {
  var pkg = require(_path2.default.resolve('package.json'));

  var production = process.env.NODE_ENV === 'production';
  var filenamePattern = production ? '[name].[chunkhash:8].js' : '[name].js';

  (0, _cleanDemo2.default)(args);

  var spinner = (0, _ora2.default)('Building demo').start();
  (0, _webpackBuild2.default)(args, {
    babel: {
      commonJSInterop: true,
      presets: ['react']
    },
    devtool: 'source-map',
    entry: {
      demo: [_path2.default.resolve('demo/src/index.js')]
    },
    output: {
      filename: filenamePattern,
      chunkFilename: filenamePattern,
      path: _path2.default.resolve('demo/dist')
    },
    plugins: {
      html: {
        mountId: 'demo',
        title: pkg.name + ' ' + pkg.version + ' Demo'
      }
    }
  }, function (err, stats) {
    if (err) {
      spinner.fail();
      return cb(err);
    }
    (0, _webpackUtils.logBuildResults)(stats, spinner);
    cb();
  });
}
module.exports = exports['default'];